package xyz.will.textcraft.command;import xyz.will.textcraft.Game;import xyz.will.textcraft.World;import xyz.will.textcraft.entity.Player;/** * Class Command - Part of the "Zork" game. *  * author:  Michael Kolling * version: 1.0 * date:    July 1999 * * This class holds information about a command that was issued by the user. * A command currently consists of two strings: a command word and a second * word (for example, if the command was "take map", then the two strings * obviously are "take" and "map"). *  * The way this is used is: Commands are already checked for being valid * command words. If the user entered an invalid command (a word that is not * known) then the command word is <null>. * * If the command had only one word, then the second word is <null>. * * The second word is not checked at the moment. It can be anything. If this * game is extended to deal with items, then the second part of the command * should probably be changed to be an item rather than a String. */public abstract class Command{    protected String argument;    public Game game;    public Player player;    public World world;    /**     * Create a command object. First and second word must be supplied, but     * either one (or both) can be null. The command word should be null to     * indicate that this was a command that is not recognised by this game.     */    public Command(String argument)    {        this.argument = argument;        this.game = Game.getInstance();        this.player = game.getPlayer();        this.world = game.getWorld();    }    /**     * Return the second word of this command. Returns null if there was no     * second word.     */    public String getArgument()    {        return argument;    }    /**     * Return true if the command has a second word.     */    public boolean hasArgument()    {        return (argument != null);    }        public abstract void run();}